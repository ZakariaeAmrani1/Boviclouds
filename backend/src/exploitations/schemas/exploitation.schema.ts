import { Prop, Schema, SchemaFactory} from '@nestjs/mongoose';
import {  Types,HydratedDocument } from 'mongoose';

export type ExploitationDocument = HydratedDocument<Exploitation>;

@Schema({ timestamps: { createdAt: 'date_creation', updatedAt: 'date_modification' } })
export class Exploitation {
  @Prop()
  numero_exploitation: string;

  @Prop()
  nom_ferme: string;

  @Prop()
  idbda_onssa: string;

  @Prop({ type: Types.ObjectId, ref: 'User' })
  identifiant_responsable: Types.ObjectId;

  @Prop()
  gerant: string;

  @Prop()
  tel_contact: string;

  @Prop()
  email_contact: string;

  @Prop({ type: Types.ObjectId, ref: 'User' })
  eleveur_id: Types.ObjectId;

  @Prop()
  region: string;

  @Prop()
  province: string;

  @Prop()
  adresse: string;

  @Prop({
    type: {
      type: String,
      enum: ['Point'],
      required: true,
      default: 'Point'
    },
    coordinates: {
      type: [Number], // [longitude, latitude]
      required: true
    }
  })
  location: {
    type: string;
    coordinates: number[];
  };


  @Prop()
  sau: number;

  @Prop()
  effectif_bovins: number;

  @Prop()
  nb_vaches_lait: number;

  @Prop()
  cooperative: boolean;

  @Prop()
  date_creation: Date;

  @Prop()
  date_modification: Date;
}

export const ExploitationSchema = SchemaFactory.createForClass(Exploitation);
ExploitationSchema.index({ location: '2dsphere' });
